;; -*- mode: emacs-lisp; coding: utf-8-unix -*-
;; Minibuffer history file, automatically generated by `savehist'.

(setq savehist-minibuffer-history-variables '(ido-buffer-history))
(setq ido-buffer-history '("*GNU Emacs*"))
(setq kill-ring '(#(";; Override the packages with the git version of Org and other packages" 0 71 (fontified t font-lock-fontified t font-lock-multiline t face org-block)) ";; This sets up the load path so that we can override it
(package-initialize nil)
;; Override the packages with the git version of Org and other packages
(add-to-list 'load-path \"/usr/local/share/emacs/site-lisp\")
;; Load the rest of the packages
(package-initialize nil)
(setq package-enable-at-startup nil)
(org-babel-load-file \"~/.emacs.d/gfanton.org\")" "#+begin_src emacs-lisp  :tangle no" "#+OPTIONS: toc:4 h:4" #("** Ace Jump :drill:
:PROPERTIES:
    :ID:       56f173e7-d2a2-4589-84d7-c6b435c8a5f8
    :DRILL_LAST_INTERVAL: 0.0
    :DRILL_REPEATS_SINCE_FAIL: 1
    :DRILL_TOTAL_REPEATS: 3
    :DRILL_FAILURE_COUNT: 2
    :DRILL_AVERAGE_QUALITY: 1.667
    :DRILL_EASE: 2.36
    :DRILL_LAST_QUALITY: 0
    :DRILL_LAST_REVIEWED: [2013-03-13 Wed 09:50]
    :END:

Quickly jump to a position in the current view.

#+begin_src emacs-lisp
  (use-package ace-jump-mode
    :ensure t)
  ;; I use the jj key-chord for this; see the definitions for key-chord
#+end_src

Ace Window looks useful too.

#+begin_src emacs-lisp
(use-package ace-window
  :ensure t :defer t
  :config (setq aw-keys '(?a ?o ?e ?u ?i ?d ?h ?t ?n ?s))
  :bind (\"C-x o\" . ace-window))
#+end_src

And ace-isearch...

#+begin_src emacs-lisp
(use-package ace-isearch
  :ensure t :defer t
  :init (global-ace-isearch-mode 1))
#+end_src

And ace-jump-zap...

#+begin_src emacs-lisp
(use-package ace-jump-zap
  :ensure t :defer t
  :bind
  ((\"M-z\" . ace-jump-zap-up-to-char-dwim)
   (\"M-Z\" . ace-jump-zap-to-char-dwim)))
#+end_src" 0 1 (face org-level-2 fontified t) 1 3 (face org-level-2 fontified t) 3 12 (face org-level-2 fontified t) 12 18 (keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight org-no-flyspell t face (org-tag org-level-2) fontified t) 18 19 (rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight org-no-flyspell t face (org-tag org-level-2) fontified t) 19 20 (fontified t) 20 32 (face org-special-keyword fontified t) 32 37 (fontified t) 37 41 (face org-special-keyword fontified t) 41 48 (fontified t) 48 84 (face org-property-value fontified t) 84 89 (fontified t) 89 110 (face org-special-keyword fontified t) 110 111 (fontified t) 111 114 (face org-property-value fontified t) 114 119 (fontified t) 119 145 (face org-special-keyword fontified t) 145 146 (fontified t) 146 147 (face org-property-value fontified t) 147 152 (fontified t) 152 173 (face org-special-keyword fontified t) 173 174 (fontified t) 174 175 (face org-property-value fontified t) 175 180 (fontified t) 180 201 (face org-special-keyword fontified t) 201 202 (fontified t) 202 203 (face org-property-value fontified t) 203 208 (fontified t) 208 231 (face org-special-keyword fontified t) 231 232 (fontified t) 232 237 (face org-property-value fontified t) 237 242 (fontified t) 242 254 (face org-special-keyword fontified t) 254 255 (fontified t) 255 259 (face org-property-value fontified t) 259 264 (fontified t) 264 284 (face org-special-keyword fontified t) 284 285 (fontified t) 285 286 (face org-property-value fontified t) 286 291 (fontified t) 291 312 (face org-special-keyword fontified t) 312 313 (fontified t) 313 334 (keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight org-no-flyspell t face org-date fontified t) 334 335 (rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight org-no-flyspell t face org-date fontified t) 335 336 (fontified t) 336 345 (face org-special-keyword fontified t) 345 396 (fontified t) 396 419 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t) 419 534 (face org-block font-lock-multiline t font-lock-fontified t fontified t) 534 535 (face org-block font-lock-multiline t font-lock-fontified t fontified t) 535 544 (face org-block-end-line font-lock-multiline t font-lock-fontified t fontified t) 544 545 (face org-block-end-line fontified t) 545 576 (fontified t) 576 599 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t) 599 733 (face org-block font-lock-multiline t font-lock-fontified t fontified t) 733 734 (face org-block font-lock-multiline t font-lock-fontified t fontified t) 734 743 (face org-block-end-line font-lock-multiline t font-lock-fontified t fontified t) 743 744 (face org-block-end-line fontified t) 744 765 (fontified t) 765 788 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t) 788 870 (face org-block font-lock-multiline t font-lock-fontified t fontified t) 870 871 (face org-block font-lock-multiline t font-lock-fontified t fontified t) 871 880 (face org-block-end-line font-lock-multiline t font-lock-fontified t fontified t) 880 881 (face org-block-end-line fontified t) 881 903 (fontified t) 903 926 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t) 926 1063 (face org-block font-lock-multiline t font-lock-fontified t fontified t) 1063 1064 (face org-block font-lock-multiline t font-lock-fontified t fontified t) 1064 1073 (font-lock-multiline t face org-block-end-line font-lock-fontified t fontified t)) #("custom directory" 0 7 (fontified t face org-level-3) 7 16 (fontified t face org-level-3))))
(setq search-ring 'nil)
(setq regexp-search-ring 'nil)
